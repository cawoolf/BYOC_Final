****General Notes for BYOC****

ToDo:
Keep up with this project enough during work so that you don't loose Android skills.
Update Connection With Being to get consent for viewing an Ad

Finish first draft of UI/UX:

***Working Tasks

Implement conversion function in HomeSet

> Create converter logic for the Spinner.
    > Link SpinnerScrollViewFragment >> ConverterTabFragment >> Add Button on MainActivity
    > Create it so the spinner menu highlights the unit selection.
    > Fragments implementing other fragment stuff.. I dunno I guess we'll figure it out lol
    > The Spinner is currently its own Fragment.. That does'nt seem to be needed.
    > Apparently that might be the best way to do this.. Kind of makes sense. But


*Completed*

> Pre-populate the Room database.
    > createFromAsset() takes a String argument. Looks like a JSON
        > Need a database schema to match the file.
    > Make List<Converter> into LiveData.. Will automatically update when the search is done.
        > LiveData needs an observer
        > provides an onChanged method that can update the Converter UI.
> Add button working preliminarily

> Remove Set List function and tab... Besides the point really. Any potential employer who sees the app will
understand what kind of knowledge it demonstrate.


************UI/UX Notes*****************************************************************************

Update UI for HomeSet that hides Converter UI until card is clicked.
Long click for delete converter card.. Displays a little x to delete.
Long click for move card position**

Remove swap button, center info button on converter card view

Use Firebase?

But add currency option for sure. Demonstrats alot.

Add currency conversion
    > Utilize back end online server and the Repository.

Throw an ad banner down there on HomeSet and SetList!

CB's load data into the Converter XML when clicked.
CXML UI allow the user to run conversions.

In the Home Set, Just copy Converter Bee by using little cards to save and load data into the converter.

In the Set List, create useful sets of Converters, that you can save as a link/ card that shows up
on the Home Set! That makes it a little different than Converter Bee.
    > Automotive
    > Finance
    > USA to Europe
    > Chemistry
The a list from the Set List can be saved to the Home Set as it's own CB

Selecting a set from the Set List will load it's own activity
    > Basically just a pre-populated version of the Home Set

When you long click a Converter Box (CB), you can move it over to add it to a set.
    > When you expand a set, it blows up to take over the home screen with all the units that
    are stored inside of it.
    > On Set List screen, each set has a little Add next to it. When clicked it adds a card to the home
    screen, which can be expanded on click to show all the units in that set.

App should always load onto the Home screen after cards have been added to it.

Two little blue lines on the scroll view that snap the units into place, and load them to the converter.
    > I think recycle view might be better for this?

> Add a custom keyboard with a clear button, like a calculator
> Make Main activity wrench and add button visibility gone when edit text is clicked

************BackEnd Notes***************************************************************************

Big question.. is initializing multiple instances of ViewModel to access the Repository and hence the
database really the best way to do it? Would prefer to just have like one static all accessible View
Model that the whole app can use.. But is that the right way for real too??

ViewModel Singleton?
Actually better to have a repository and database singleton.. Which we do in this case for the db.

> Actually not as big of a deal as I thought.. Each ViewModel is unique to the Activity
Which is this case is only the main activity, so calling it a handfu of times
Does'nt really create a memory leak?

Use MVVM and Room Database Extensively!

> MySet is the home set of converters
> In SetList, the selection of a list loads that converter set directly on to the SetList fragment.
> Design app as best as possible with MVVM in mind

> Fragments and Activities just control the UI
        > Relay the user inputs to the ViewModel
    > The ViewModel (Each Fragment has one) and handles the data
        > Passes that down to a Repository
            > Which Stores it into room


> Use JSON to initialize the Room database

************Specifics*******************************************************************************
Fragments must handle menu stuff with tab navigation.

Themes are applied at the activity level in the manifest.

Can select from Android material colors list. There's alot.


************Bugs************************************************************************************
SpinnerBug: Fixed
    > Clears SavedInstance and Always initializes the Spinner through the ConverterTab constructor.
To fix Spinner performance, need to use nested fragments.
    > getChildFramgent manager.
It's not really a bug.. It's initializing the fragment before you scroll to it for performance.

ConverterTabFrag constructor trying to initialize the SpinnerScrollViewFragment from onCreate savedInstanceState!

AsyncTask UI Thread bug for getTargetConverter()
    > "Fixed" by creating an AsyncTask on the ConverterTabFragment..


***********Done*************************************************************************************

3/21
*Completed*
    > Fix keyboard so that it centers on the Converter XML box
    > Bottom justify cursor, and add typing line: Complete
    > Add Converter XML to HomeSet
    >The add button on the HomeSet and Set list is confusing. Remove most likely so that it's only on the
     Converter selection
    > Update Converter XML to be simple and usable across all Fragments and Activities


    Create Converter Box XML
    > Use RecycleView + GridLayout manager to display a set of boxes on the HomeSetTab
    > Use one CB XML for all different conversion types. Not just distance.

3/19
    *Completed*
     > Bottom justify cursor, and add typing line: Complete
     > Add Converter XML to HomeSet
     >The add button on the HomeSet and Set list is confusing. Remove most likely so that it's only on the
     Converter selection

     Create Converter Box XML
     > Use RecycleView + GridLayout manager to display a set of boxes on the HomeSetTab
     > Use one CB XML for all different conversion types. Not just distance.